<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[maven换成阿里云源，整个世界美好了]]></title>
    <url>%2F2018%2F03%2F01%2Fmaven%E6%8D%A2%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90%EF%BC%8C%E6%95%B4%E4%B8%AA%E4%B8%96%E7%95%8C%E7%BE%8E%E5%A5%BD%E4%BA%86%2F</url>
    <content type="text"><![CDATA[在maven安装目录下有个conf文件夹settings.xml 把镜像源换成阿里云的。下载就快了 12345678910[root@dingyi conf]# pwd/usr/local/maven/conf[root@dingyi conf]# vim settings.xml搜索&lt;mirror&gt; 146-159 之间替换&lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;/mirror&gt; 体验非一般的感觉吧！是不是一下世界就美好了呢！]]></content>
      <categories>
        <category>运维分享</category>
      </categories>
      <tags>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[yearning-sql审计平台安装]]></title>
    <url>%2F2018%2F02%2F28%2Fyearning-sql%E5%AE%A1%E8%AE%A1%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[环境准备安装依赖 1yum -y install gcc gcc-c++ zlib zlib-devel -y openssl-devel 安装python3.6123456wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz[root@sql soft]# tar xf Python-3.6.4.tgz -C /usr/local/python3/[root@sql python3]# ./configure --prefix=/usr/local/python3[root@sql python3]# make &amp;&amp; make install [root@sql python3]# ln -s /usr/local/python3/bin/python3 /usr/bin/python3[root@sql bin]ln -s /usr/local/python3/bin/pip3.6 /usr/bin/pip3 编辑安装文件 /usr/local/python3/Modules/Setup 安装mysql123456789101112131415161718192021222324252627yum -y install autoconf numa* libaio libaio-devel yum -y install MySQL-server MySQL-devel MySQL-clientvim /etc/my.cnf添加[client]port = 3306socket = /var/lib/mysql/mysql.sockdefault-character-set=utf8[mysql]no-auto-rehashdefault-character-set=utf8[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockuser=mysqlsymbolic-links=0lower_case_table_names=1character-set-server=utf8wait_timeout=31536000[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid初始化数据库：/usr/bin/mysql_install_dbchown -R mysql:mysql /var/lib/mysql开启服务：[root@sql mysql]# systemctl start mysql 安装nginx123rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm[root@sql ~]# yum -y install nginx[root@sql ~]# systemctl start nginx 访问 10.1.3.111 出现下面截图说明正常 安装yearning123456git clone https://github.com/cookieY/Yearning.gitmv Yearning/ /usr/local/yearningcd /usr/local/yearningcd install/tar xf inception.tarcd inception/bin 修改配置文件 vim.cnf 启动inception如果这个不会作者在install里面已经有编译好的只需要修改配置文件就可以了 1/usr/local/yearning/install/inception/bin/Inception --defaults-file=/usr/local/yearning/install/inception/bin/inc.cnf 测试连接inception mysql -uroot -h127.0.0.1 -P6669 配置 yearning [root@sql src]# vim deploy.conf 安装yearning 依赖包 123pip3 install -r requirements.txt [root@sql src]# pip3 install -r requirements.txt 安装python依赖[root@sql src]# python3 manage.py makemigrations &amp;&amp; python3 manage.py migrate 初始化数据库 注意事项123由于Inception 并不原生支持pymysql，所以需更改pymysql相关源码修改 $PYTHON_HOME/lib/python3.6/site-packages/pymysql下connections.py 和 cursors.py 两个文件 vim /usr/local/python3/lib/python3.6/site-packages/pymysql/connections.py //1108行左右 123456789101112找到 connections.py 1108行 if int(self.server_version.split(&apos;.&apos;, 1)[0]) &gt;= 5: self.client_flag |= CLIENT.MULTI_RESULTS更改为 try: if int(self.server_version.split(&apos;.&apos;, 1)[0]) &gt;= 5: self.client_flag |= CLIENT.MULTI_RESULTS except: if self.server_version.split(&apos;.&apos;, 1)[0] &gt;= &apos;Inception2&apos;: self.client_flag |= CLIENT.MULTI_RESULTS [root@sql src]# vim /usr/local/python3/lib/python3.6/site-packages/pymysql/cursors.pyt 12345678找到 cursors.py 345行if self._result and (self._result.has_next or not self._result.warning_count): return更改为 if self._result: return 如果怕修改出错 。可以去安装目录install 下直接吧里面的文件替换到python目录下 12[root@sql install]# cp connections.py /usr/local/python3/lib/python3.6/site-packages/pymysql[root@sql install]# cp cursors.py /usr/local/python3/lib/python3.6/site-packages/pymysql 添加用户初始化1[root@sql src]# echo &quot;from core.models import Account;Account.objects.create_user(username=&apos;admin&apos;, password=&apos;Yearning_admin&apos;, group=&apos;admin&apos;,is_staff=1)&quot; | python3 manage.py shell 把编译好的文件复制到nginx html 目录下 1[root@sql nginx]# cp -rf /usr/local/yearning/webpage/dist/* /usr/share/nginx/html/ 重启nginx1[root@sql nginx]# systemctl restart nginx 启动django12[root@sql nginx]# cd /usr/local/yearning/src[root@sql src]# python3 manage.py runserver 0.0.0.0:8000 访问deploy.conf 配置文件中ipaddress 填写的地址 默认账号: admin 密码:Yearning_admin 遇到的问题问题1 解决办法yum install zlib zlib-devel -y 问题2 pip is configured … that require TLS/SSL 解决办法 到python3目录从新编译 编辑安装文件 /usr/local/python3/Modules/Setup 然后从新编辑安装]]></content>
      <categories>
        <category>运维分享</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[finder-web程序员查看日志利器]]></title>
    <url>%2F2018%2F02%2F27%2Ffinder-web%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9F%A5%E7%9C%8B%E6%97%A5%E5%BF%97%E5%88%A9%E5%99%A8%2F</url>
    <content type="text"><![CDATA[安装jdk 1.8版本1$ [root@nutch soft]# tar xf jdk-8u101-linux-x64.tar.gz 添加环境变量 12345#JAVA Environmentexport JAVA_HOME=/usr/lib/jdk/jdk1.8.0_101export JRE_HOME=/usr/lib/jdk/jdk1.8.0_101/jreexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATHexport CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JRE_HOME/lib 安装tomcat123http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.4/bin/apache-tomcat-8.5.27.tar.gz[root@bogon soft]# mkdir /usr/local/tomcat# tar xf apache-tomcat-8.5.27.tar.gz -C /usr/local/tomcat/ 启动tomcat12[root@finder-web soft]# cd /usr/local/tomcat/[root@finder-web tomcat]# ./bin/startup.sh 访问 http://10.1.3.210:8080/ 单节点安装123456/usr/local/tomcat./bin/shutdown.shrm -rf webapps/ROOT/mkdir webapps/ROOTunzip -o -d webapps/ROOT finder-web-2.3.1.zip./bin/startup.sh http://10.1.3.210:8080/ 浏览器继续访问 用户名密码 默认admin 集群安装先按照单节点搭建完成然后启动 master节点 Slave1节点 在master上添加slave1节点 slave1从master同步 工作空间管理 设置log日志目录 安全设置需要同步key 查看集群log 文件浏览]]></content>
      <categories>
        <category>运维分享</category>
      </categories>
      <tags>
        <tag>log</tag>
      </tags>
  </entry>
</search>
